# Configuração opcional para Redis via ElastiCache
# Descomente as linhas abaixo se quiser usar ElastiCache Redis

# Resources:
#   MyElastiCacheSubnetGroup:
#     Type: AWS::ElastiCache::SubnetGroup
#     Properties:
#       Description: "Subnet group for ElastiCache"
#       SubnetIds:
#         - subnet-12345678  # Substitua pelos IDs das suas subnets
#         - subnet-87654321
#   
#   MyElastiCacheCluster:
#     Type: AWS::ElastiCache::CacheCluster
#     Properties:
#       CacheNodeType: cache.t3.micro
#       Engine: redis
#       NumCacheNodes: 1
#       CacheSubnetGroupName: !Ref MyElastiCacheSubnetGroup
#       VpcSecurityGroupIds:
#         - !Ref MyElastiCacheSecurityGroup
#   
#   MyElastiCacheSecurityGroup:
#     Type: AWS::EC2::SecurityGroup
#     Properties:
#       GroupDescription: "Security group for ElastiCache"
#       VpcId: vpc-12345678  # Substitua pelo ID da sua VPC
#       SecurityGroupIngress:
#         - IpProtocol: tcp
#           FromPort: 6379
#           ToPort: 6379
#           SourceSecurityGroupId: !Ref AWSEBSecurityGroup

# option_settings:
#   aws:elasticbeanstalk:application:environment:
#     REDIS_HOST: !GetAtt MyElastiCacheCluster.RedisEndpoint.Address
#     REDIS_PORT: !GetAtt MyElastiCacheCluster.RedisEndpoint.Port

# NOTA: Para usar esta configuração:
# 1. Descomente as seções acima
# 2. Substitua os IDs de subnet e VPC pelos seus valores reais
# 3. Configure as variáveis de ambiente REDIS_HOST e REDIS_PORT
# 4. O cache funcionará sem Redis, mas com performance reduzida 