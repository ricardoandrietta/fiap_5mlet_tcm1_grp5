{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "API Flask - Dados Vitivinícolas Embrapa v1.1.0",
		"description": "Collection para testar a API Flask de Web Scraping que extrai dados vitivinícolas do site da Embrapa.\n\n## Funcionalidades:\n- 5 endpoints de dados (Produção, Processamento, Comercialização, Importação, Exportação)\n- Autenticação HTTP Basic\n- Validação rigorosa de parâmetros year (1970-2024) e sub_option\n- Filtros específicos por endpoint com sub-opções validadas\n- Sistema de cache inteligente com Redis\n- Versionamento automático simples\n- Parsing inteligente de tabelas HTML\n\n## Credenciais:\n- Usuário 1: user1 / password1\n- Usuário 2: user2 / password2\n\n## Base URL:\n- Local: http://localhost:5000\n- Docker: http://localhost:5000\n\n## Parâmetros de Filtro:\n- **year**: 1970-2024 (validação rigorosa)\n- **sub_option**: Valores específicos por endpoint (listas fechadas)\n\n## Sub-opções por Endpoint:\n- **Produção**: VINHO DE MESA, VINHO FINO DE MESA (VINIFERA), SUCO DE UVA, DERIVADOS\n- **Processamento**: viniferas, americanas, mesa, semclass\n- **Comercialização**: VINHO DE MESA, ESPUMANTES, UVAS FRESCAS, SUCO DE UVA\n- **Importação**: vinhos, espumantes, frescas, passas, suco\n- **Exportação**: vinho, uva, espumantes, suco\n\n## Versão Atual: 1.1.0\n- Sistema de versionamento simples baseado em arquivo version.txt\n- Incremento automático a cada build\n- Visível no endpoint /heartbeat",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Produção",
			"item": [
				{
					"name": "Dados de Produção - Todos os Anos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/producao",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"producao"
							]
						},
						"description": "Busca todos os dados de produção de uvas e vinhos sem filtros específicos."
					},
					"response": []
				},
				{
					"name": "Dados de Produção - Filtrado por Ano",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/producao?year=2023",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"producao"
							],
							"query": [
								{
									"key": "year",
									"value": "2023",
									"description": "Ano para filtrar os dados (1970-2024)"
								}
							]
						},
						"description": "Busca dados de produção filtrados por um ano específico. Ano deve estar entre 1970-2024."
					},
					"response": []
				},
				{
					"name": "Dados de Produção - Vinho de Mesa",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/producao?year=2023&sub_option=VINHO DE MESA",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"producao"
							],
							"query": [
								{
									"key": "year",
									"value": "2023",
									"description": "Ano para filtrar os dados (1970-2024)"
								},
								{
									"key": "sub_option",
									"value": "VINHO DE MESA",
									"description": "Sub-opção específica para produção"
								}
							]
						},
						"description": "Busca dados de produção de vinho de mesa para um ano específico."
					},
					"response": []
				},
				{
					"name": "Dados de Produção - Suco de Uva",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/producao?sub_option=SUCO DE UVA",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"producao"
							],
							"query": [
								{
									"key": "sub_option",
									"value": "SUCO DE UVA",
									"description": "Sub-opção específica para produção"
								}
							]
						},
						"description": "Busca dados de produção de suco de uva para todos os anos."
					},
					"response": []
				},
				{
					"name": "Teste Validação - Ano Inválido (Deve falhar)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/producao?year=1969",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"producao"
							],
							"query": [
								{
									"key": "year",
									"value": "1969",
									"description": "Ano inválido (antes de 1970)"
								}
							]
						},
						"description": "Teste de validação com ano inválido. Deve retornar erro HTTP 400."
					},
					"response": []
				},
				{
					"name": "Teste Validação - Sub-opção Inválida (Deve falhar)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/producao?sub_option=OPCAO_INEXISTENTE",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"producao"
							],
							"query": [
								{
									"key": "sub_option",
									"value": "OPCAO_INEXISTENTE",
									"description": "Sub-opção inválida para produção"
								}
							]
						},
						"description": "Teste de validação com sub-opção inválida. Deve retornar erro HTTP 400."
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados aos dados de produção de uvas e vinhos.\n\nSub-opções válidas: VINHO DE MESA, VINHO FINO DE MESA (VINIFERA), SUCO DE UVA, DERIVADOS"
		},
		{
			"name": "Processamento",
			"item": [
				{
					"name": "Dados de Processamento - Todos os Anos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/processamento",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"processamento"
							]
						},
						"description": "Busca todos os dados de processamento de uvas e vinhos."
					},
					"response": []
				},
				{
					"name": "Dados de Processamento - Viníferas",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/processamento?year=2023&sub_option=viniferas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"processamento"
							],
							"query": [
								{
									"key": "year",
									"value": "2023",
									"description": "Ano para filtrar os dados (1970-2024)"
								},
								{
									"key": "sub_option",
									"value": "viniferas",
									"description": "Processamento de uvas viníferas"
								}
							]
						},
						"description": "Busca dados de processamento de uvas viníferas."
					},
					"response": []
				},
				{
					"name": "Dados de Processamento - Americanas",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/processamento?sub_option=americanas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"processamento"
							],
							"query": [
								{
									"key": "sub_option",
									"value": "americanas",
									"description": "Processamento de uvas americanas"
								}
							]
						},
						"description": "Busca dados de processamento de uvas americanas."
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados aos dados de processamento de uvas e vinhos.\n\nSub-opções válidas: viniferas, americanas, mesa, semclass"
		},
		{
			"name": "Comercialização",
			"item": [
				{
					"name": "Dados de Comercialização - Todos os Anos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/comercializacao",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"comercializacao"
							]
						},
						"description": "Busca todos os dados de comercialização de vinhos."
					},
					"response": []
				},
				{
					"name": "Dados de Comercialização - Espumantes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/comercializacao?year=2022&sub_option=ESPUMANTES",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"comercializacao"
							],
							"query": [
								{
									"key": "year",
									"value": "2022",
									"description": "Ano para filtrar os dados (1970-2024)"
								},
								{
									"key": "sub_option",
									"value": "ESPUMANTES",
									"description": "Comercialização de espumantes"
								}
							]
						},
						"description": "Busca dados de comercialização de espumantes."
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados aos dados de comercialização de vinhos.\n\nSub-opções válidas: VINHO DE MESA, ESPUMANTES, UVAS FRESCAS, SUCO DE UVA"
		},
		{
			"name": "Importação",
			"item": [
				{
					"name": "Dados de Importação - Todos os Anos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/importacao",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"importacao"
							]
						},
						"description": "Busca todos os dados de importação de vinhos e derivados."
					},
					"response": []
				},
				{
					"name": "Dados de Importação - Vinhos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/importacao?year=2023&sub_option=vinhos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"importacao"
							],
							"query": [
								{
									"key": "year",
									"value": "2023",
									"description": "Ano para filtrar os dados (1970-2024)"
								},
								{
									"key": "sub_option",
									"value": "vinhos",
									"description": "Importação de vinhos"
								}
							]
						},
						"description": "Busca dados de importação de vinhos por país."
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados aos dados de importação de vinhos e derivados.\n\nSub-opções válidas: vinhos, espumantes, frescas, passas, suco"
		},
		{
			"name": "Exportação",
			"item": [
				{
					"name": "Dados de Exportação - Todos os Anos",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/exportacao",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"exportacao"
							]
						},
						"description": "Busca todos os dados de exportação de vinhos e derivados."
					},
					"response": []
				},
				{
					"name": "Dados de Exportação - Uvas",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/exportacao?year=2023&sub_option=uva",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"exportacao"
							],
							"query": [
								{
									"key": "year",
									"value": "2023",
									"description": "Ano para filtrar os dados (1970-2024)"
								},
								{
									"key": "sub_option",
									"value": "uva",
									"description": "Exportação de uvas"
								}
							]
						},
						"description": "Busca dados de exportação de uvas por país."
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados aos dados de exportação de vinhos e derivados.\n\nSub-opções válidas: vinho, uva, espumantes, suco"
		},
		{
			"name": "Health Check & Monitoring",
			"item": [
				{
					"name": "Heartbeat - Health Check",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/heartbeat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"heartbeat"
							]
						},
						"description": "Endpoint de monitoramento da saúde da API. Não requer autenticação e retorna informações sobre:\n- Status da aplicação\n- Versão atual (sistema simples baseado em version.txt)\n- Informações de ambiente (local/docker)\n- Status do Redis\n- Informações de build"
					},
					"response": []
				}
			],
			"description": "Endpoint para monitoramento da saúde da API."
		},
		{
			"name": "Testes de Validação",
			"item": [
				{
					"name": "Teste - Ano Limite Inferior (1970)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/producao?year=1970",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"producao"
							],
							"query": [
								{
									"key": "year",
									"value": "1970",
									"description": "Ano limite inferior válido"
								}
							]
						},
						"description": "Teste com ano limite inferior válido (1970). Deve retornar status 200."
					},
					"response": []
				},
				{
					"name": "Teste - Ano Limite Superior (2024)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/producao?year=2024",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"producao"
							],
							"query": [
								{
									"key": "year",
									"value": "2024",
									"description": "Ano limite superior válido"
								}
							]
						},
						"description": "Teste com ano limite superior válido (2024). Deve retornar status 200."
					},
					"response": []
				},
				{
					"name": "Teste - Ano Inválido Baixo (1969)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/producao?year=1969",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"producao"
							],
							"query": [
								{
									"key": "year",
									"value": "1969",
									"description": "Ano inválido (abaixo do limite)"
								}
							]
						},
						"description": "Teste com ano inválido (1969). Deve retornar erro HTTP 400."
					},
					"response": []
				},
				{
					"name": "Teste - Ano Inválido Alto (2025)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/producao?year=2025",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"producao"
							],
							"query": [
								{
									"key": "year",
									"value": "2025",
									"description": "Ano inválido (acima do limite)"
								}
							]
						},
						"description": "Teste com ano inválido (2025). Deve retornar erro HTTP 400."
					},
					"response": []
				},
				{
					"name": "Teste - Sub-opção Inválida Produção",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/producao?sub_option=viniferas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"producao"
							],
							"query": [
								{
									"key": "sub_option",
									"value": "viniferas",
									"description": "Sub-opção de processamento usada em produção (inválida)"
								}
							]
						},
						"description": "Teste com sub-opção de outro endpoint. Deve retornar erro HTTP 400."
					},
					"response": []
				},
				{
					"name": "Teste - Ano Não Numérico",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/producao?year=abc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"producao"
							],
							"query": [
								{
									"key": "year",
									"value": "abc",
									"description": "Ano não numérico (inválido)"
								}
							]
						},
						"description": "Teste com ano não numérico. Deve retornar erro HTTP 400."
					},
					"response": []
				}
			],
			"description": "Testes específicos para validação de parâmetros year (1970-2024) e sub_option (listas fechadas por endpoint)."
		},
		{
			"name": "Testes de Autenticação",
			"item": [
				{
					"name": "Teste sem Autenticação (Deve falhar)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/producao",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"producao"
							]
						},
						"description": "Teste para verificar se a API rejeita requisições sem autenticação. Deve retornar status 401."
					},
					"response": []
				},
				{
					"name": "Teste com Credenciais Inválidas (Deve falhar)",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "usuario_invalido",
									"type": "string"
								},
								{
									"key": "password",
									"value": "senha_invalida",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/producao",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"producao"
							]
						},
						"description": "Teste para verificar se a API rejeita credenciais inválidas. Deve retornar status 401."
					},
					"response": []
				},
				{
					"name": "Teste com User2 (Deve funcionar)",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "user2",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password2",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/producao",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"producao"
							]
						},
						"description": "Teste para verificar se o segundo usuário funciona corretamente. Deve retornar status 200."
					},
					"response": []
				}
			],
			"description": "Testes para verificar o funcionamento da autenticação HTTP Basic."
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "{{username}}",
				"type": "string"
			},
			{
				"key": "password",
				"value": "{{password}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Script executado antes de cada requisição",
					"console.log('Fazendo requisição para:', pm.request.url.toString());",
					"console.log('Versão da API: 1.1.0 - Sistema de versionamento simples');"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Testes automáticos executados após cada requisição",
					"",
					"// Verificar se a resposta não está vazia",
					"pm.test('Response is not empty', function () {",
					"    pm.expect(pm.response.text()).to.not.be.empty;",
					"});",
					"",
									"// Para requisições autenticadas bem-sucedidas, verificar estrutura da resposta",
				"if (pm.response.code === 200 && !pm.request.url.toString().includes('/heartbeat')) {",
					"    pm.test('Response has correct data structure', function () {",
					"        const jsonData = pm.response.json();",
					"        pm.expect(jsonData).to.have.property('data');",
					"        pm.expect(jsonData.data).to.have.property('header');",
					"        pm.expect(jsonData.data).to.have.property('body');",
					"        pm.expect(jsonData.data).to.have.property('footer');",
					"    });",
					"    ",
					"    pm.test('Response includes cache information', function () {",
					"        const jsonData = pm.response.json();",
					"        pm.expect(jsonData).to.have.property('cached');",
					"    });",
					"}",
					"",
					"// Testes para validação de parâmetros (erro 400)",
					"if (pm.response.code === 400) {",
					"    pm.test('Validation error returns proper structure', function () {",
					"        const jsonData = pm.response.json();",
					"        pm.expect(jsonData).to.have.property('error');",
					"        pm.expect(jsonData.error).to.be.a('string');",
					"    });",
					"}",
					"",
					"// Testes de tempo de resposta",
					"pm.test('Response time is acceptable', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(30000);",
					"});",
					"",
									"// Para testes de autenticação inválida",
				"if (pm.request.auth && pm.request.auth.type === 'noauth' && !pm.request.url.toString().includes('/heartbeat')) {",
					"    pm.test('Unauthorized request returns 401', function () {",
					"        pm.expect(pm.response.code).to.equal(401);",
					"    });",
					"}",
					"",
					"// Testes específicos para heartbeat",
					"if (pm.request.url.toString().includes('/heartbeat')) {",
					"    pm.test('Heartbeat returns healthy status', function () {",
					"        const jsonData = pm.response.json();",
					"        pm.expect(jsonData).to.have.property('status', 'healthy');",
					"        pm.expect(jsonData).to.have.property('timestamp');",
					"        pm.expect(jsonData).to.have.property('version');",
					"        pm.expect(jsonData).to.have.property('service');",
					"    });",
					"    ",
					"    pm.test('Heartbeat includes version information', function () {",
					"        const jsonData = pm.response.json();",
					"        pm.expect(jsonData).to.have.property('version_info');",
					"        pm.expect(jsonData.version_info).to.have.property('version');",
					"        pm.expect(jsonData.version_info).to.have.property('build_date');",
					"        pm.expect(jsonData.version_info).to.have.property('environment');",
					"        pm.expect(jsonData.version_info).to.have.property('source');",
					"    });",
					"    ",
					"    pm.test('Heartbeat includes cache status', function () {",
					"        const jsonData = pm.response.json();",
					"        pm.expect(jsonData).to.have.property('cache');",
					"        pm.expect(jsonData.cache).to.have.property('redis_status');",
					"    });",
					"}",
					"",
					
					"",
					"// Testes específicos para validação de parâmetros",
					"if (pm.request.url.toString().includes('year=1969') || pm.request.url.toString().includes('year=2025') || pm.request.url.toString().includes('year=abc')) {",
					"    pm.test('Invalid year parameter returns 400', function () {",
					"        pm.expect(pm.response.code).to.equal(400);",
					"    });",
					"}",
					"",
					"if (pm.request.url.toString().includes('sub_option=OPCAO_INEXISTENTE') || pm.request.url.toString().includes('sub_option=viniferas') && pm.request.url.toString().includes('/producao')) {",
					"    pm.test('Invalid sub_option parameter returns 400', function () {",
					"        pm.expect(pm.response.code).to.equal(400);",
					"    });",
					"}",
					"",
					"// Testes para anos válidos nos limites",
					"if (pm.request.url.toString().includes('year=1970') || pm.request.url.toString().includes('year=2024')) {",
					"    pm.test('Valid boundary year returns 200', function () {",
					"        pm.expect(pm.response.code).to.equal(200);",
					"    });",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:5000",
			"type": "string"
		},
		{
			"key": "username",
			"value": "user1",
			"type": "string"
		},
		{
			"key": "password",
			"value": "password1",
			"type": "string"
		}
	]
} 